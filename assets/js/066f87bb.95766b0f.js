"use strict";(self.webpackChunkpeers_app_docs_hub=self.webpackChunkpeers_app_docs_hub||[]).push([[66],{626:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"peers-sdk/user-group","title":"Peers Architecture","description":"System Overview","source":"@site/projects/peers-sdk/user-group.md","sourceDirName":"peers-sdk","slug":"/peers-sdk/user-group","permalink":"/peers-sdk/user-group","draft":false,"unlisted":false,"editUrl":"https://github.com/peers-app/peers-sdk/edit/main/docs/user-group.md","tags":[],"version":"current","frontMatter":{"custom_edit_url":"https://github.com/peers-app/peers-sdk/edit/main/docs/user-group.md"},"sidebar":"tutorialSidebar","previous":{"title":"RPC Registry - Backward Compatibility Challenge","permalink":"/peers-sdk/injection8"},"next":{"title":"peers-ui","permalink":"/peers-ui/"}}');var t=s(4848),o=s(8453);const a={custom_edit_url:"https://github.com/peers-app/peers-sdk/edit/main/docs/user-group.md"},i="Peers Architecture",u={},l=[{value:"System Overview",id:"system-overview",level:2},{value:"Key Architecture Principles",id:"key-architecture-principles",level:2},{value:"Group Structure",id:"group-structure",level:3},{value:"Database Architecture",id:"database-architecture",level:3},{value:"Data Distribution",id:"data-distribution",level:3}];function p(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"peers-architecture",children:"Peers Architecture"})}),"\n",(0,t.jsx)(r.h2,{id:"system-overview",children:"System Overview"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-mermaid",children:"graph TD\n    User[\ud83d\udc64 User]\n    \n    PersonalGroup[\ud83c\udfe0 Personal Group]\n    PersonalDB[(Personal SQLite DB)]\n    GroupsTable[Groups Table]\n    \n    Group1[\ud83d\udc65 Group 1]\n    Group2[\ud83d\udc65 Group 2]\n    GroupN[\ud83d\udc65 Group N]\n    \n    Group1DB[(Group 1 SQLite DB)]\n    Group2DB[(Group 2 SQLite DB)]\n    GroupNDB[(Group N SQLite DB)]\n    \n    %% User has default personal group\n    User --\x3e|has default| PersonalGroup\n    PersonalGroup --\x3e|maps to| PersonalDB\n    PersonalDB --\x3e|contains| GroupsTable\n    \n    %% Groups table contains references to other groups\n    GroupsTable --\x3e|references| Group1\n    GroupsTable --\x3e|references| Group2\n    GroupsTable --\x3e|references| GroupN\n    \n    %% Each group has its own SQLite DB\n    Group1 --\x3e|maps to| Group1DB\n    Group2 --\x3e|maps to| Group2DB\n    GroupN --\x3e|maps to| GroupNDB\n    \n    %% Styling\n    classDef userClass fill:#e1f5fe\n    classDef groupClass fill:#e8f5e8\n    classDef dbClass fill:#fff3e0\n    \n    class User userClass\n    class PersonalGroup,Group1,Group2,GroupN groupClass\n    class PersonalDB,Group1DB,Group2DB,GroupNDB,GroupsTable dbClass\n"})}),"\n",(0,t.jsx)(r.h2,{id:"key-architecture-principles",children:"Key Architecture Principles"}),"\n",(0,t.jsx)(r.h3,{id:"group-structure",children:"Group Structure"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Personal Group"}),": Every user starts with a default personal group"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Group Database Mapping"}),": Each group (including personal) maps to its own SQLite database"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Groups Table"}),": Located in the personal SQLite DB, contains references to all groups the user belongs to"]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"database-architecture",children:"Database Architecture"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Personal SQLite DB"}),": Contains the Groups table and personal data"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Group SQLite DBs"}),": Separate databases for each group the user participates in"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Scalability"}),": Typical user expected to have 10-20 groups, though system can handle hundreds"]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"data-distribution",children:"Data Distribution"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Groups table in personal DB acts as an index/registry of all user's group memberships"}),"\n",(0,t.jsx)(r.li,{children:"Actual group data and conversations stored in respective group databases"}),"\n",(0,t.jsx)(r.li,{children:"This separation allows for efficient data management and access control"}),"\n"]})]})}function c(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>a,x:()=>i});var n=s(6540);const t={},o=n.createContext(t);function a(e){const r=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);